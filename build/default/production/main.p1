Version 4.0 HI-TECH Software Intermediate Code
"35 ./digital_keypad.h
[; ;./digital_keypad.h: 35: void init_digital_keypad(void);
[v _init_digital_keypad `(v ~T0 @X0 0 ef ]
"35 ./clcd.h
[; ;./clcd.h: 35: void init_clcd(void);
[v _init_clcd `(v ~T0 @X0 0 ef ]
"2965 E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2965: extern volatile __bit TRISC2 __attribute__((address(0x43A)));
[v _TRISC2 `Vb ~T0 @X0 0 e@1082 ]
"2962
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2962: extern volatile __bit TRISC1 __attribute__((address(0x439)));
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
"2707
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2707: extern volatile __bit RC1 __attribute__((address(0x39)));
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"12 ./timers.h
[; ;./timers.h: 12: void init_timer2(void);
[v _init_timer2 `(v ~T0 @X0 0 ef ]
"2629 E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2629: extern volatile __bit PEIE __attribute__((address(0x5E)));
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"2569
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2569: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
[p mainexit ]
"37 ./clcd.h
[; ;./clcd.h: 37: void clcd_print(const char *str, unsigned char addr);
[v _clcd_print `(v ~T0 @X0 0 ef2`*Cuc`uc ]
"34 ./digital_keypad.h
[; ;./digital_keypad.h: 34: unsigned char read_digital_keypad(unsigned char mode);
[v _read_digital_keypad `(uc ~T0 @X0 0 ef1`uc ]
"32 ./main.h
[; ;./main.h: 32: void power_on_screen (void);
[v _power_on_screen `(v ~T0 @X0 0 ef ]
"36
[; ;./main.h: 36: void set_time(void);
[v _set_time `(v ~T0 @X0 0 ef ]
"38 ./clcd.h
[; ;./clcd.h: 38: void clear_screen(void);
[v _clear_screen `(v ~T0 @X0 0 ef ]
"2902 E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2902: extern volatile __bit TMR2ON __attribute__((address(0x92)));
[v _TMR2ON `Vb ~T0 @X0 0 e@146 ]
"2710
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2710: extern volatile __bit RC2 __attribute__((address(0x3A)));
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"33 ./main.h
[; ;./main.h: 33: void washing_program_display(unsigned char key);
[v _washing_program_display `(v ~T0 @X0 0 ef1`uc ]
"34
[; ;./main.h: 34: void water_level_display(unsigned char key);
[v _water_level_display `(v ~T0 @X0 0 ef1`uc ]
"35
[; ;./main.h: 35: void run_program(unsigned char key);
[v _run_program `(v ~T0 @X0 0 ef1`uc ]
"36 ./clcd.h
[; ;./clcd.h: 36: void clcd_putch(const char data, unsigned char addr);
[v _clcd_putch `(v ~T0 @X0 0 ef2`Cuc`uc ]
[v F972 `(v ~T0 @X0 1 tf1`ul ]
"92 E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\pic.h
[v __delay `JF972 ~T0 @X0 0 e ]
[p i __delay ]
"37 ./main.h
[; ;./main.h: 37: void door_status_check(void);
[v _door_status_check `(v ~T0 @X0 0 ef ]
"2674 E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2674: extern volatile __bit RB0 __attribute__((address(0x30)));
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"54 E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;E:/Learning/mplab/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"14 main.c
[; ;main.c: 14: }
[p x WDTE=OFF ]
"16
[; ;main.c: 16: unsigned char operation_mode = 0x01;
[v _init_config `(v ~T0 @X0 1 ef ]
{
[e :U _init_config ]
[f ]
"17
[; ;main.c: 17: unsigned char reset_mode = 0x11;
[e ( _init_digital_keypad ..  ]
"19
[; ;main.c: 19: unsigned char *washing_prog[]={ "Daily", "Heavy" , "Delicates", "Whites", "Stain wash" , "Eco cottons", "Woolens" , "Bed sheets", "Rinse+Dry" , "Dry only", "Wash only" , "Aqua store"};
[e ( _init_clcd ..  ]
"21
[; ;main.c: 21: unsigned char *water_level[]={"Auto", "Low", "Medium", "High", "Max"};
[e = _TRISC2 -> -> 0 `i `b ]
"23
[; ;main.c: 23: unsigned int rinse_time, wash_time, spin_time;
[e = _TRISC1 -> -> 0 `i `b ]
"24
[; ;main.c: 24: 
[e = _RC1 -> -> 0 `i `b ]
"25
[; ;main.c: 25: void main(void) {
[e ( _init_timer2 ..  ]
"27
[; ;main.c: 27:     unsigned char key;
[e = _PEIE -> -> 1 `i `b ]
"29
[; ;main.c: 29: 
[e = _GIE -> -> 1 `i `b ]
"30
[; ;main.c: 30:     clcd_print("Press key5 to", (0x80 + 1));
[e :UE 99 ]
}
"32
[; ;main.c: 32:     clcd_print("Washing Machine", (0x90 + 1));
[v _operation_mode `uc ~T0 @X0 1 e ]
[i _operation_mode
-> -> 1 `i `uc
]
"33
[; ;main.c: 33: 
[v _reset_mode `uc ~T0 @X0 1 e ]
[i _reset_mode
-> -> 17 `i `uc
]
"34
[; ;main.c: 34:     while(read_digital_keypad(1)!=0x2F)
[v _program_no `uc ~T0 @X0 1 e ]
[i _program_no
-> -> 0 `i `uc
]
"35
[; ;main.c: 35:     {
[v _washing_prog `*uc ~T0 @X0 -> 12 `i e ]
[i _washing_prog
:U ..
:s 1C
:s 2C
:s 3C
:s 4C
:s 5C
:s 6C
:s 7C
:s 8C
:s 9C
:s 10C
:s 11C
:s 12C
..
]
"36
[; ;main.c: 36:         for(unsigned int wait=6000;wait--;);
[v _water_lvl_index `uc ~T0 @X0 1 e ]
[i _water_lvl_index
-> -> 0 `i `uc
]
"37
[; ;main.c: 37:     }
[v _water_level `*uc ~T0 @X0 -> 5 `i e ]
[i _water_level
:U ..
:s 13C
:s 14C
:s 15C
:s 16C
:s 17C
..
]
"38
[; ;main.c: 38: 
[v _min `uc ~T0 @X0 1 e ]
[v _sec `uc ~T0 @X0 1 e ]
"39
[; ;main.c: 39:     power_on_screen();
[v _rinse_time `ui ~T0 @X0 1 e ]
[v _wash_time `ui ~T0 @X0 1 e ]
[v _spin_time `ui ~T0 @X0 1 e ]
[v $root$_main `(v ~T0 @X0 0 e ]
"41
[; ;main.c: 41:     while(1)
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"42
[; ;main.c: 42:     {
[e ( _init_config ..  ]
"43
[; ;main.c: 43:         key=read_digital_keypad(1);
[v _key `uc ~T0 @X0 1 a ]
"46
[; ;main.c: 46:         {
[e ( _clcd_print (2 , :s 18C -> + -> 128 `i -> 1 `i `uc ]
"47
[; ;main.c: 47:             operation_mode=0x02;
[e ( _clcd_print (2 , :s 19C -> + -> 192 `i -> 4 `i `uc ]
"48
[; ;main.c: 48:             reset_mode=0x12;
[e ( _clcd_print (2 , :s 20C -> + -> 144 `i -> 1 `i `uc ]
"50
[; ;main.c: 50:         else if(key==0xB7 && operation_mode==0x02)
[e $U 101  ]
[e :U 102 ]
"51
[; ;main.c: 51:         {
{
"52
[; ;main.c: 52:             set_time();
{
[v _wait `ui ~T0 @X0 1 a ]
[e = _wait -> -> 6000 `i `ui ]
[e $U 107  ]
[e :U 104 ]
[e :U 107 ]
[e $ != -- _wait -> -> 1 `i `ui -> -> 0 `i `ui 104  ]
[e :U 105 ]
}
"53
[; ;main.c: 53:             operation_mode=0x03;
}
[e :U 101 ]
"50
[; ;main.c: 50:         else if(key==0xB7 && operation_mode==0x02)
[e $ != -> ( _read_digital_keypad (1 -> -> 1 `i `uc `i -> 47 `i 102  ]
[e :U 103 ]
"55
[; ;main.c: 55:             clcd_print("Press Switch", (0x80 + 0));
[e ( _power_on_screen ..  ]
"57
[; ;main.c: 57:             clcd_print("SW6: STOP", (0x90 + 0));
[e :U 109 ]
"58
[; ;main.c: 58:         }
{
"59
[; ;main.c: 59:         if(key ==0x2F && operation_mode == 0x05)
[e = _key ( _read_digital_keypad (1 -> -> 1 `i `uc ]
"61
[; ;main.c: 61:             TMR2ON=1;
[e $ ! && == -> _key `i -> 183 `i == -> _operation_mode `i -> 1 `i 111  ]
"62
[; ;main.c: 62:             RC2=1;
{
"63
[; ;main.c: 63:             operation_mode=0x04;
[e = _operation_mode -> -> 2 `i `uc ]
"64
[; ;main.c: 64:         }
[e = _reset_mode -> -> 18 `i `uc ]
"65
[; ;main.c: 65: 
}
[e $U 112  ]
"66
[; ;main.c: 66:         switch(operation_mode)
[e :U 111 ]
[e $ ! && == -> _key `i -> 183 `i == -> _operation_mode `i -> 2 `i 113  ]
"67
[; ;main.c: 67:         {
{
"68
[; ;main.c: 68:             case 0x01:
[e ( _set_time ..  ]
"69
[; ;main.c: 69:                 washing_program_display(key);
[e = _operation_mode -> -> 3 `i `uc ]
"70
[; ;main.c: 70:                 break;
[e ( _clear_screen ..  ]
"71
[; ;main.c: 71:             case 0x02:
[e ( _clcd_print (2 , :s 21C -> + -> 128 `i -> 0 `i `uc ]
"72
[; ;main.c: 72:                 water_level_display(key);
[e ( _clcd_print (2 , :s 22C -> + -> 192 `i -> 0 `i `uc ]
"73
[; ;main.c: 73:                 break;
[e ( _clcd_print (2 , :s 23C -> + -> 144 `i -> 0 `i `uc ]
"74
[; ;main.c: 74:             case 0x03:
}
[e :U 113 ]
[e :U 112 ]
"75
[; ;main.c: 75:                 if(key==0x2F)
[e $ ! && == -> _key `i -> 47 `i == -> _operation_mode `i -> 5 `i 114  ]
"76
[; ;main.c: 76:                 {
{
"77
[; ;main.c: 77:                     operation_mode=0x04;
[e = _TMR2ON -> -> 1 `i `b ]
"78
[; ;main.c: 78:                     reset_mode=0x14;
[e = _RC2 -> -> 1 `i `b ]
"79
[; ;main.c: 79:                 }
[e = _operation_mode -> -> 4 `i `uc ]
"80
[; ;main.c: 80:                 else if(key==0x1F)
}
[e :U 114 ]
"82
[; ;main.c: 82:                     operation_mode=0x01;
[e $U 116  ]
"83
[; ;main.c: 83:                     reset_mode=0x11;
{
"84
[; ;main.c: 84:                 }
[e :U 117 ]
"85
[; ;main.c: 85:                 continue;
[e ( _washing_program_display (1 _key ]
"86
[; ;main.c: 86:             case 0x04:
[e $U 115  ]
"87
[; ;main.c: 87:                 run_program(key);
[e :U 118 ]
"88
[; ;main.c: 88:                 break;
[e ( _water_level_display (1 _key ]
"89
[; ;main.c: 89:         }
[e $U 115  ]
"90
[; ;main.c: 90:         reset_mode=0x00;
[e :U 119 ]
"91
[; ;main.c: 91:     }
[e $ ! == -> _key `i -> 47 `i 120  ]
"92
[; ;main.c: 92: }
{
"93
[; ;main.c: 93: 
[e = _operation_mode -> -> 4 `i `uc ]
"94
[; ;main.c: 94: void power_on_screen()
[e = _reset_mode -> -> 20 `i `uc ]
"95
[; ;main.c: 95: {
}
[e $U 121  ]
"96
[; ;main.c: 96:     for(unsigned char i=0;i<16;i++)
[e :U 120 ]
[e $ ! == -> _key `i -> 31 `i 122  ]
"97
[; ;main.c: 97:     {
{
"98
[; ;main.c: 98:         clcd_putch(0xFF, (0x80 + i) );
[e = _operation_mode -> -> 1 `i `uc ]
"99
[; ;main.c: 99:     }
[e = _reset_mode -> -> 17 `i `uc ]
"100
[; ;main.c: 100:     clcd_print("Powering ON", (0xC0 + 2));
}
[e :U 122 ]
[e :U 121 ]
"101
[; ;main.c: 101:     clcd_print("Washing Machine", (0x90 + 1));
[e $U 108  ]
"102
[; ;main.c: 102:     for(unsigned char i=0;i<16;i++)
[e :U 123 ]
"103
[; ;main.c: 103:     {
[e ( _run_program (1 _key ]
"104
[; ;main.c: 104:         clcd_putch(0xFF, (0xD0 + i) );
[e $U 115  ]
"105
[; ;main.c: 105:     }
}
[e $U 115  ]
[e :U 116 ]
[e [\ _operation_mode , $ -> 1 `i 117
 , $ -> 2 `i 118
 , $ -> 3 `i 119
 , $ -> 4 `i 123
 115 ]
[e :U 115 ]
"106
[; ;main.c: 106:     _delay((unsigned long)((1000)*(20000000/4000.0)));
[e = _reset_mode -> -> 0 `i `uc ]
"107
[; ;main.c: 107:     clear_screen();
}
[e :U 108 ]
[e $U 109  ]
[e :U 110 ]
"108
[; ;main.c: 108: }
[e :UE 100 ]
}
"110
[; ;main.c: 110: void washing_program_display(unsigned char key)
[v _power_on_screen `(v ~T0 @X0 1 ef ]
"111
[; ;main.c: 111: {
{
[e :U _power_on_screen ]
[f ]
"112
[; ;main.c: 112:     if(reset_mode == 0x11)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 125  ]
[e $U 126  ]
[e :U 125 ]
"113
[; ;main.c: 113:     {
{
"114
[; ;main.c: 114:         clear_screen();
[e ( _clcd_putch (2 , -> -> 255 `i `uc -> + -> 128 `i -> _i `i `uc ]
"115
[; ;main.c: 115:         program_no=0;
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 125  ]
[e :U 126 ]
}
"116
[; ;main.c: 116:     }
[e ( _clcd_print (2 , :s 24C -> + -> 192 `i -> 2 `i `uc ]
"117
[; ;main.c: 117: 
[e ( _clcd_print (2 , :s 25C -> + -> 144 `i -> 1 `i `uc ]
"118
[; ;main.c: 118:     if(key==0x37)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 128  ]
[e $U 129  ]
[e :U 128 ]
"119
[; ;main.c: 119:     {
{
"120
[; ;main.c: 120:         program_no++;
[e ( _clcd_putch (2 , -> -> 255 `i `uc -> + -> 208 `i -> _i `i `uc ]
"121
[; ;main.c: 121:         if(program_no==12)
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 128  ]
[e :U 129 ]
}
"122
[; ;main.c: 122:         {
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"123
[; ;main.c: 123:             program_no=0;
[e ( _clear_screen ..  ]
"124
[; ;main.c: 124:         }
[e :UE 124 ]
}
"126
[; ;main.c: 126:     }
[v _washing_program_display `(v ~T0 @X0 1 ef1`uc ]
"127
[; ;main.c: 127:     clcd_print("Washing Programs", (0x80 + 0));
{
[e :U _washing_program_display ]
"126
[; ;main.c: 126:     }
[v _key `uc ~T0 @X0 1 r1 ]
"127
[; ;main.c: 127:     clcd_print("Washing Programs", (0x80 + 0));
[f ]
"128
[; ;main.c: 128:     clcd_putch('*', (0xC0 + 0));
[e $ ! == -> _reset_mode `i -> 17 `i 132  ]
"129
[; ;main.c: 129: 
{
"130
[; ;main.c: 130: 
[e ( _clear_screen ..  ]
"131
[; ;main.c: 131: 
[e = _program_no -> -> 0 `i `uc ]
"132
[; ;main.c: 132:     if(program_no<=9)
}
[e :U 132 ]
"134
[; ;main.c: 134:         clcd_print(washing_prog[program_no],(0xC0 + 2));
[e $ ! == -> _key `i -> 55 `i 133  ]
"135
[; ;main.c: 135:         clcd_print(washing_prog[program_no+1],(0x90 + 2));
{
"136
[; ;main.c: 136:         clcd_print(washing_prog[program_no+2],(0xD0 + 2));
[e ++ _program_no -> -> 1 `i `uc ]
"137
[; ;main.c: 137:     }
[e $ ! == -> _program_no `i -> 12 `i 134  ]
"138
[; ;main.c: 138:     else if(program_no==10)
{
"139
[; ;main.c: 139:     {
[e = _program_no -> -> 0 `i `uc ]
"140
[; ;main.c: 140:         clcd_print(washing_prog[program_no],(0xC0 + 2));
}
[e :U 134 ]
"141
[; ;main.c: 141:         clcd_print(washing_prog[program_no+1],(0x90 + 2));
[e ( _clear_screen ..  ]
"142
[; ;main.c: 142:         clcd_print(washing_prog[0],(0xD0 + 2));
}
[e :U 133 ]
"143
[; ;main.c: 143:     }
[e ( _clcd_print (2 , :s 26C -> + -> 128 `i -> 0 `i `uc ]
"144
[; ;main.c: 144:     else if(program_no==11)
[e ( _clcd_putch (2 , -> -> 42 `ui `uc -> + -> 192 `i -> 0 `i `uc ]
"148
[; ;main.c: 148:         clcd_print(washing_prog[1],(0xD0 + 2));
[e $ ! <= -> _program_no `i -> 9 `i 135  ]
"149
[; ;main.c: 149:     }
{
"150
[; ;main.c: 150: 
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> _program_no `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 192 `i -> 2 `i `uc ]
"151
[; ;main.c: 151: }
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> -> + -> _program_no `i -> 1 `i `ui `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 144 `i -> 2 `i `uc ]
"152
[; ;main.c: 152: 
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> -> + -> _program_no `i -> 2 `i `ui `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 208 `i -> 2 `i `uc ]
"153
[; ;main.c: 153: void water_level_display(unsigned char key)
}
[e $U 136  ]
"154
[; ;main.c: 154: {
[e :U 135 ]
[e $ ! == -> _program_no `i -> 10 `i 137  ]
"155
[; ;main.c: 155:     if(reset_mode == 0x12)
{
"156
[; ;main.c: 156:     {
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> _program_no `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 192 `i -> 2 `i `uc ]
"157
[; ;main.c: 157:         clear_screen();
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> -> + -> _program_no `i -> 1 `i `ui `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 144 `i -> 2 `i `uc ]
"158
[; ;main.c: 158:         water_lvl_index=0;
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> -> -> 0 `i `ui `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 208 `i -> 2 `i `uc ]
"159
[; ;main.c: 159:     }
}
[e $U 138  ]
"160
[; ;main.c: 160: 
[e :U 137 ]
[e $ ! == -> _program_no `i -> 11 `i 139  ]
"161
[; ;main.c: 161:     if(key==0x37)
{
"162
[; ;main.c: 162:     {
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> _program_no `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 192 `i -> 2 `i `uc ]
"163
[; ;main.c: 163:         water_lvl_index++;
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> -> -> 0 `i `ui `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 144 `i -> 2 `i `uc ]
"164
[; ;main.c: 164:         if(water_lvl_index==5)
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> -> -> 1 `i `ui `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 208 `i -> 2 `i `uc ]
"165
[; ;main.c: 165:         {
}
[e :U 139 ]
[e :U 138 ]
[e :U 136 ]
"167
[; ;main.c: 167:         }
[e :UE 131 ]
}
"169
[; ;main.c: 169:     }
[v _water_level_display `(v ~T0 @X0 1 ef1`uc ]
"170
[; ;main.c: 170:     clcd_print("Water Level:", (0x80 + 0));
{
[e :U _water_level_display ]
"169
[; ;main.c: 169:     }
[v _key `uc ~T0 @X0 1 r1 ]
"170
[; ;main.c: 170:     clcd_print("Water Level:", (0x80 + 0));
[f ]
"171
[; ;main.c: 171:     clcd_putch('*', (0xC0 + 0));
[e $ ! == -> _reset_mode `i -> 18 `i 141  ]
"172
[; ;main.c: 172: 
{
"173
[; ;main.c: 173: 
[e ( _clear_screen ..  ]
"174
[; ;main.c: 174: 
[e = _water_lvl_index -> -> 0 `i `uc ]
"175
[; ;main.c: 175:     if(water_lvl_index<=2)
}
[e :U 141 ]
"177
[; ;main.c: 177:         clcd_print(water_level[water_lvl_index],(0xC0 + 2));
[e $ ! == -> _key `i -> 55 `i 142  ]
"178
[; ;main.c: 178:         clcd_print(water_level[water_lvl_index+1],(0x90 + 2));
{
"179
[; ;main.c: 179:         clcd_print(water_level[water_lvl_index+2],(0xD0 + 2));
[e ++ _water_lvl_index -> -> 1 `i `uc ]
"180
[; ;main.c: 180:     }
[e $ ! == -> _water_lvl_index `i -> 5 `i 143  ]
"181
[; ;main.c: 181:     else if(water_lvl_index==3)
{
"182
[; ;main.c: 182:     {
[e = _water_lvl_index -> -> 0 `i `uc ]
"183
[; ;main.c: 183:         clcd_print(water_level[water_lvl_index],(0xC0 + 2));
}
[e :U 143 ]
"184
[; ;main.c: 184:         clcd_print(water_level[water_lvl_index+1],(0x90 + 2));
[e ( _clear_screen ..  ]
"185
[; ;main.c: 185:         clcd_print(water_level[0],(0xD0 + 2));
}
[e :U 142 ]
"186
[; ;main.c: 186:     }
[e ( _clcd_print (2 , :s 27C -> + -> 128 `i -> 0 `i `uc ]
"187
[; ;main.c: 187:     else if(water_lvl_index==4)
[e ( _clcd_putch (2 , -> -> 42 `ui `uc -> + -> 192 `i -> 0 `i `uc ]
"191
[; ;main.c: 191:         clcd_print(water_level[1],(0xD0 + 2));
[e $ ! <= -> _water_lvl_index `i -> 2 `i 144  ]
"192
[; ;main.c: 192:     }
{
"193
[; ;main.c: 193: 
[e ( _clcd_print (2 , -> *U + &U _water_level * -> _water_lvl_index `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 192 `i -> 2 `i `uc ]
"194
[; ;main.c: 194: }
[e ( _clcd_print (2 , -> *U + &U _water_level * -> -> + -> _water_lvl_index `i -> 1 `i `ui `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 144 `i -> 2 `i `uc ]
"195
[; ;main.c: 195: 
[e ( _clcd_print (2 , -> *U + &U _water_level * -> -> + -> _water_lvl_index `i -> 2 `i `ui `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 208 `i -> 2 `i `uc ]
"196
[; ;main.c: 196: void set_time()
}
[e $U 145  ]
"197
[; ;main.c: 197: {
[e :U 144 ]
[e $ ! == -> _water_lvl_index `i -> 3 `i 146  ]
"198
[; ;main.c: 198:     switch(program_no)
{
"199
[; ;main.c: 199:     {
[e ( _clcd_print (2 , -> *U + &U _water_level * -> _water_lvl_index `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 192 `i -> 2 `i `uc ]
"200
[; ;main.c: 200:         case 0:
[e ( _clcd_print (2 , -> *U + &U _water_level * -> -> + -> _water_lvl_index `i -> 1 `i `ui `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 144 `i -> 2 `i `uc ]
"201
[; ;main.c: 201:             switch(water_lvl_index)
[e ( _clcd_print (2 , -> *U + &U _water_level * -> -> -> 0 `i `ui `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 208 `i -> 2 `i `uc ]
"202
[; ;main.c: 202:             {
}
[e $U 147  ]
"203
[; ;main.c: 203:                 case 1:
[e :U 146 ]
[e $ ! == -> _water_lvl_index `i -> 4 `i 148  ]
"204
[; ;main.c: 204:                     sec=33;
{
"205
[; ;main.c: 205:                     min=0;
[e ( _clcd_print (2 , -> *U + &U _water_level * -> _water_lvl_index `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 192 `i -> 2 `i `uc ]
"206
[; ;main.c: 206:                     break;
[e ( _clcd_print (2 , -> *U + &U _water_level * -> -> -> 0 `i `ui `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 144 `i -> 2 `i `uc ]
"207
[; ;main.c: 207:                 case 0:
[e ( _clcd_print (2 , -> *U + &U _water_level * -> -> -> 1 `i `ui `ux -> -> # *U &U _water_level `ui `ux `*Cuc -> + -> 208 `i -> 2 `i `uc ]
"208
[; ;main.c: 208:                 case 2:
}
[e :U 148 ]
[e :U 147 ]
[e :U 145 ]
"210
[; ;main.c: 210:                     min=0;
[e :UE 140 ]
}
"212
[; ;main.c: 212:                 case 3:
[v _set_time `(v ~T0 @X0 1 ef ]
"213
[; ;main.c: 213:                 case 4:
{
[e :U _set_time ]
[f ]
"214
[; ;main.c: 214:                     sec=45;
[e $U 151  ]
"215
[; ;main.c: 215:                     min=0;
{
"216
[; ;main.c: 216:                     break;
[e :U 152 ]
"217
[; ;main.c: 217:             }
[e $U 154  ]
"218
[; ;main.c: 218:             break;
{
"219
[; ;main.c: 219:         case 1:
[e :U 155 ]
"220
[; ;main.c: 220:             switch(water_lvl_index)
[e = _sec -> -> 33 `i `uc ]
"221
[; ;main.c: 221:             {
[e = _min -> -> 0 `i `uc ]
"222
[; ;main.c: 222:                 case 1:
[e $U 153  ]
"223
[; ;main.c: 223:                     sec=43;
[e :U 156 ]
"224
[; ;main.c: 224:                     min=0;
[e :U 157 ]
"225
[; ;main.c: 225:                     break;
[e = _sec -> -> 41 `i `uc ]
"226
[; ;main.c: 226:                 case 0:
[e = _min -> -> 0 `i `uc ]
"227
[; ;main.c: 227:                 case 2:
[e $U 153  ]
"228
[; ;main.c: 228:                     sec=50;
[e :U 158 ]
"229
[; ;main.c: 229:                     min=0;
[e :U 159 ]
"230
[; ;main.c: 230:                     break;
[e = _sec -> -> 45 `i `uc ]
"231
[; ;main.c: 231:                 case 3:
[e = _min -> -> 0 `i `uc ]
"232
[; ;main.c: 232:                 case 4:
[e $U 153  ]
"233
[; ;main.c: 233:                     sec=57;
}
[e $U 153  ]
[e :U 154 ]
[e [\ _water_lvl_index , $ -> 1 `i 155
 , $ -> 0 `i 156
 , $ -> 2 `i 157
 , $ -> 3 `i 158
 , $ -> 4 `i 159
 153 ]
[e :U 153 ]
"234
[; ;main.c: 234:                     min=0;
[e $U 150  ]
"235
[; ;main.c: 235:                     break;
[e :U 160 ]
"236
[; ;main.c: 236:             }
[e $U 162  ]
"237
[; ;main.c: 237:             break;
{
"238
[; ;main.c: 238:         case 2:
[e :U 163 ]
"239
[; ;main.c: 239:             switch(water_lvl_index)
[e = _sec -> -> 43 `i `uc ]
"240
[; ;main.c: 240:             {
[e = _min -> -> 0 `i `uc ]
"241
[; ;main.c: 241:                 case 1:
[e $U 161  ]
"242
[; ;main.c: 242:                 case 0:
[e :U 164 ]
"243
[; ;main.c: 243:                 case 2:
[e :U 165 ]
"244
[; ;main.c: 244:                     sec=26;
[e = _sec -> -> 50 `i `uc ]
"245
[; ;main.c: 245:                     min=0;
[e = _min -> -> 0 `i `uc ]
"246
[; ;main.c: 246:                     break;
[e $U 161  ]
"247
[; ;main.c: 247:                 case 3:
[e :U 166 ]
"248
[; ;main.c: 248:                 case 4:
[e :U 167 ]
"249
[; ;main.c: 249:                     sec=31;
[e = _sec -> -> 57 `i `uc ]
"250
[; ;main.c: 250:                     min=0;
[e = _min -> -> 0 `i `uc ]
"251
[; ;main.c: 251:                     break;
[e $U 161  ]
"252
[; ;main.c: 252:             }
}
[e $U 161  ]
[e :U 162 ]
[e [\ _water_lvl_index , $ -> 1 `i 163
 , $ -> 0 `i 164
 , $ -> 2 `i 165
 , $ -> 3 `i 166
 , $ -> 4 `i 167
 161 ]
[e :U 161 ]
"253
[; ;main.c: 253:             break;
[e $U 150  ]
"254
[; ;main.c: 254:         case 3:
[e :U 168 ]
"255
[; ;main.c: 255:             sec=16;
[e $U 170  ]
"256
[; ;main.c: 256:             min=1;
{
"257
[; ;main.c: 257:             break;
[e :U 171 ]
"258
[; ;main.c: 258:         case 4:
[e :U 172 ]
"259
[; ;main.c: 259:             sec=36;
[e :U 173 ]
"260
[; ;main.c: 260:             min=1;
[e = _sec -> -> 26 `i `uc ]
"261
[; ;main.c: 261:             break;
[e = _min -> -> 0 `i `uc ]
"262
[; ;main.c: 262:         case 5:
[e $U 169  ]
"263
[; ;main.c: 263:             switch(water_lvl_index)
[e :U 174 ]
"264
[; ;main.c: 264:             {
[e :U 175 ]
"265
[; ;main.c: 265:                 case 1:
[e = _sec -> -> 31 `i `uc ]
"266
[; ;main.c: 266:                 case 0:
[e = _min -> -> 0 `i `uc ]
"267
[; ;main.c: 267:                 case 2:
[e $U 169  ]
"268
[; ;main.c: 268:                     sec=31;
}
[e $U 169  ]
[e :U 170 ]
[e [\ _water_lvl_index , $ -> 1 `i 171
 , $ -> 0 `i 172
 , $ -> 2 `i 173
 , $ -> 3 `i 174
 , $ -> 4 `i 175
 169 ]
[e :U 169 ]
"269
[; ;main.c: 269:                     min=0;
[e $U 150  ]
"270
[; ;main.c: 270:                     break;
[e :U 176 ]
"271
[; ;main.c: 271:                 case 3:
[e = _sec -> -> 16 `i `uc ]
"272
[; ;main.c: 272:                 case 4:
[e = _min -> -> 1 `i `uc ]
"273
[; ;main.c: 273:                     sec=36;
[e $U 150  ]
"274
[; ;main.c: 274:                     min=0;
[e :U 177 ]
"275
[; ;main.c: 275:                     break;
[e = _sec -> -> 36 `i `uc ]
"276
[; ;main.c: 276:             }
[e = _min -> -> 1 `i `uc ]
"277
[; ;main.c: 277:         case 6:
[e $U 150  ]
"278
[; ;main.c: 278:             sec=29;
[e :U 178 ]
"279
[; ;main.c: 279:             min=0;
[e $U 180  ]
"280
[; ;main.c: 280:             break;
{
"281
[; ;main.c: 281:         case 7:
[e :U 181 ]
"282
[; ;main.c: 282:             switch(water_lvl_index)
[e :U 182 ]
"283
[; ;main.c: 283:             {
[e :U 183 ]
"284
[; ;main.c: 284:                 case 1:
[e = _sec -> -> 31 `i `uc ]
"285
[; ;main.c: 285:                     sec=43;
[e = _min -> -> 0 `i `uc ]
"286
[; ;main.c: 286:                     min=0;
[e $U 179  ]
"287
[; ;main.c: 287:                     break;
[e :U 184 ]
"288
[; ;main.c: 288:                 case 0:
[e :U 185 ]
"289
[; ;main.c: 289:                 case 2:
[e = _sec -> -> 36 `i `uc ]
"290
[; ;main.c: 290:                     sec=53;
[e = _min -> -> 0 `i `uc ]
"291
[; ;main.c: 291:                     min=0;
[e $U 179  ]
"292
[; ;main.c: 292:                     break;
}
[e $U 179  ]
[e :U 180 ]
[e [\ _water_lvl_index , $ -> 1 `i 181
 , $ -> 0 `i 182
 , $ -> 2 `i 183
 , $ -> 3 `i 184
 , $ -> 4 `i 185
 179 ]
[e :U 179 ]
"293
[; ;main.c: 293:                 case 3:
[e :U 186 ]
"294
[; ;main.c: 294:                 case 4:
[e = _sec -> -> 29 `i `uc ]
"295
[; ;main.c: 295:                     sec=0;
[e = _min -> -> 0 `i `uc ]
"296
[; ;main.c: 296:                     min=1;
[e $U 150  ]
"297
[; ;main.c: 297:                     break;
[e :U 187 ]
"298
[; ;main.c: 298:             }
[e $U 189  ]
"299
[; ;main.c: 299:         case 8:
{
"300
[; ;main.c: 300:             switch(water_lvl_index)
[e :U 190 ]
"301
[; ;main.c: 301:             {
[e = _sec -> -> 43 `i `uc ]
"302
[; ;main.c: 302:                 case 1:
[e = _min -> -> 0 `i `uc ]
"303
[; ;main.c: 303:                     sec=18;
[e $U 188  ]
"304
[; ;main.c: 304:                     min=0;
[e :U 191 ]
"305
[; ;main.c: 305:                     break;
[e :U 192 ]
"306
[; ;main.c: 306:                 case 0:
[e = _sec -> -> 53 `i `uc ]
"307
[; ;main.c: 307:                 case 2:
[e = _min -> -> 0 `i `uc ]
"308
[; ;main.c: 308:                 case 3:
[e $U 188  ]
"309
[; ;main.c: 309:                 case 4:
[e :U 193 ]
"310
[; ;main.c: 310:                     sec=20;
[e :U 194 ]
"311
[; ;main.c: 311:                     min=0;
[e = _sec -> -> 0 `i `uc ]
"312
[; ;main.c: 312:                     break;
[e = _min -> -> 1 `i `uc ]
"313
[; ;main.c: 313:             }
[e $U 188  ]
"314
[; ;main.c: 314:         case 9:
}
[e $U 188  ]
[e :U 189 ]
[e [\ _water_lvl_index , $ -> 1 `i 190
 , $ -> 0 `i 191
 , $ -> 2 `i 192
 , $ -> 3 `i 193
 , $ -> 4 `i 194
 188 ]
[e :U 188 ]
"315
[; ;main.c: 315:             sec=6;
[e :U 195 ]
"316
[; ;main.c: 316:             min=0;
[e $U 197  ]
"317
[; ;main.c: 317:             break;
{
"318
[; ;main.c: 318:         case 11:
[e :U 198 ]
"319
[; ;main.c: 319:         case 10:
[e = _sec -> -> 18 `i `uc ]
"320
[; ;main.c: 320:             switch(water_lvl_index)
[e = _min -> -> 0 `i `uc ]
"321
[; ;main.c: 321:             {
[e $U 196  ]
"322
[; ;main.c: 322:                 case 1:
[e :U 199 ]
"323
[; ;main.c: 323:                     sec=16;
[e :U 200 ]
"324
[; ;main.c: 324:                     min=0;
[e :U 201 ]
"325
[; ;main.c: 325:                     break;
[e :U 202 ]
"326
[; ;main.c: 326:                 case 0:
[e = _sec -> -> 20 `i `uc ]
"327
[; ;main.c: 327:                 case 2:
[e = _min -> -> 0 `i `uc ]
"328
[; ;main.c: 328:                     sec=21;
[e $U 196  ]
"329
[; ;main.c: 329:                     min=0;
}
[e $U 196  ]
[e :U 197 ]
[e [\ _water_lvl_index , $ -> 1 `i 198
 , $ -> 0 `i 199
 , $ -> 2 `i 200
 , $ -> 3 `i 201
 , $ -> 4 `i 202
 196 ]
[e :U 196 ]
"330
[; ;main.c: 330:                     break;
[e :U 203 ]
"331
[; ;main.c: 331:                 case 3:
[e = _sec -> -> 6 `i `uc ]
"332
[; ;main.c: 332:                 case 4:
[e = _min -> -> 0 `i `uc ]
"333
[; ;main.c: 333:                     sec=26;
[e $U 150  ]
"334
[; ;main.c: 334:                     min=0;
[e :U 204 ]
"335
[; ;main.c: 335:                     break;
[e :U 205 ]
"336
[; ;main.c: 336:             }
[e $U 207  ]
"337
[; ;main.c: 337:     }
{
"338
[; ;main.c: 338: }
[e :U 208 ]
"339
[; ;main.c: 339: 
[e = _sec -> -> 16 `i `uc ]
"340
[; ;main.c: 340: void run_program(unsigned char key)
[e = _min -> -> 0 `i `uc ]
"341
[; ;main.c: 341: {
[e $U 206  ]
"342
[; ;main.c: 342:     door_status_check();
[e :U 209 ]
"343
[; ;main.c: 343:     static int time, total_time;
[e :U 210 ]
"344
[; ;main.c: 344:     if(reset_mode==0x14)
[e = _sec -> -> 21 `i `uc ]
"345
[; ;main.c: 345:     {
[e = _min -> -> 0 `i `uc ]
"346
[; ;main.c: 346:         clear_screen();
[e $U 206  ]
"347
[; ;main.c: 347:         clcd_print("PROG:", (0x80 + 0));
[e :U 211 ]
"348
[; ;main.c: 348:         clcd_print(washing_prog[program_no], (0x80 + 6));
[e :U 212 ]
"349
[; ;main.c: 349:         clcd_print("TIME:", (0xC0 + 0));
[e = _sec -> -> 26 `i `uc ]
"350
[; ;main.c: 350: 
[e = _min -> -> 0 `i `uc ]
"351
[; ;main.c: 351:         clcd_putch((min/10)+'0', (0xC0 + 6));
[e $U 206  ]
"352
[; ;main.c: 352:         clcd_putch((min%10)+'0', (0xC0 + 7));
}
[e $U 206  ]
[e :U 207 ]
[e [\ _water_lvl_index , $ -> 1 `i 208
 , $ -> 0 `i 209
 , $ -> 2 `i 210
 , $ -> 3 `i 211
 , $ -> 4 `i 212
 206 ]
[e :U 206 ]
"353
[; ;main.c: 353:         clcd_putch(':', (0xC0 + 8));
}
[e $U 150  ]
[e :U 151 ]
[e [\ _program_no , $ -> 0 `i 152
 , $ -> 1 `i 160
 , $ -> 2 `i 168
 , $ -> 3 `i 176
 , $ -> 4 `i 177
 , $ -> 5 `i 178
 , $ -> 6 `i 186
 , $ -> 7 `i 187
 , $ -> 8 `i 195
 , $ -> 9 `i 203
 , $ -> 11 `i 204
 , $ -> 10 `i 205
 150 ]
[e :U 150 ]
"354
[; ;main.c: 354:         clcd_putch((sec/10)+'0', (0xC0 + 9));
[e :UE 149 ]
}
"356
[; ;main.c: 356:         clcd_print("(MM:SS)",(0x90 + 5));
[v _run_program `(v ~T0 @X0 1 ef1`uc ]
"357
[; ;main.c: 357:         _delay((unsigned long)((2000)*(20000000/4000.0)));
{
[e :U _run_program ]
"356
[; ;main.c: 356:         clcd_print("(MM:SS)",(0x90 + 5));
[v _key `uc ~T0 @X0 1 r1 ]
"357
[; ;main.c: 357:         _delay((unsigned long)((2000)*(20000000/4000.0)));
[f ]
"358
[; ;main.c: 358:         clear_screen();
[e ( _door_status_check ..  ]
"359
[; ;main.c: 359:         clcd_print("Function - ", (0x80 + 0));
[v F1027 `i ~T0 @X0 1 s time ]
[v F1028 `i ~T0 @X0 1 s total_time ]
"360
[; ;main.c: 360:         clcd_print("Time: ", (0xC0 + 0));
[e $ ! == -> _reset_mode `i -> 20 `i 214  ]
"361
[; ;main.c: 361:         clcd_print("5-Start  6-Pause", (0xD0 + 0));
{
"362
[; ;main.c: 362: 
[e ( _clear_screen ..  ]
"363
[; ;main.c: 363:         time=total_time=(min*60)+sec;
[e ( _clcd_print (2 , :s 28C -> + -> 128 `i -> 0 `i `uc ]
"364
[; ;main.c: 364:         wash_time=(int)total_time*(0.46);
[e ( _clcd_print (2 , -> *U + &U _washing_prog * -> _program_no `ux -> -> # *U &U _washing_prog `ui `ux `*Cuc -> + -> 128 `i -> 6 `i `uc ]
"365
[; ;main.c: 365:         rinse_time=(int)total_time*(0.12);
[e ( _clcd_print (2 , :s 29C -> + -> 192 `i -> 0 `i `uc ]
"367
[; ;main.c: 367: 
[e ( _clcd_putch (2 , -> + -> / -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 6 `i `uc ]
"368
[; ;main.c: 368:         RC2=1;
[e ( _clcd_putch (2 , -> + -> % -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 7 `i `uc ]
"369
[; ;main.c: 369:         TMR2ON=1;
[e ( _clcd_putch (2 , -> -> 58 `ui `uc -> + -> 192 `i -> 8 `i `uc ]
"370
[; ;main.c: 370:     }
[e ( _clcd_putch (2 , -> + -> / -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 9 `i `uc ]
"371
[; ;main.c: 371:     if(key == 0x1F)
[e ( _clcd_putch (2 , -> + -> % -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 10 `i `uc ]
"372
[; ;main.c: 372:     {
[e ( _clcd_print (2 , :s 30C -> + -> 144 `i -> 5 `i `uc ]
"373
[; ;main.c: 373:         RC2=0;
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"374
[; ;main.c: 374:         TMR2ON=0;
[e ( _clear_screen ..  ]
"375
[; ;main.c: 375:         operation_mode=0x05;
[e ( _clcd_print (2 , :s 31C -> + -> 128 `i -> 0 `i `uc ]
"376
[; ;main.c: 376:     }
[e ( _clcd_print (2 , :s 32C -> + -> 192 `i -> 0 `i `uc ]
"377
[; ;main.c: 377: 
[e ( _clcd_print (2 , :s 33C -> + -> 208 `i -> 0 `i `uc ]
"379
[; ;main.c: 379:     if(program_no <= 7)
[e = F1027 = F1028 + * -> _min `i -> 60 `i -> _sec `i ]
"380
[; ;main.c: 380:     {
[e = _wash_time -> * -> F1028 `d .0.46 `ui ]
"381
[; ;main.c: 381:         if(total_time >= (time - wash_time))
[e = _rinse_time -> * -> F1028 `d .0.12 `ui ]
"382
[; ;main.c: 382:         {
[e = _spin_time - - -> F1028 `ui _wash_time _rinse_time ]
"384
[; ;main.c: 384:         }
[e = _RC2 -> -> 1 `i `b ]
"385
[; ;main.c: 385:         else if(total_time>=(time - wash_time - spin_time))
[e = _TMR2ON -> -> 1 `i `b ]
"386
[; ;main.c: 386:         {
}
[e :U 214 ]
"387
[; ;main.c: 387:             clcd_print("Rinse", (0x80 + 11));
[e $ ! == -> _key `i -> 31 `i 215  ]
"388
[; ;main.c: 388:         }
{
"389
[; ;main.c: 389:         else
[e = _RC2 -> -> 0 `i `b ]
"390
[; ;main.c: 390:         {
[e = _TMR2ON -> -> 0 `i `b ]
"391
[; ;main.c: 391:             clcd_print("Spin ",(0x80 + 11));
[e = _operation_mode -> -> 5 `i `uc ]
"392
[; ;main.c: 392:         }
}
[e :U 215 ]
"394
[; ;main.c: 394:     else if(program_no==8)
[e = F1028 + * -> _min `i -> 60 `i -> _sec `i ]
"395
[; ;main.c: 395:     {
[e $ ! <= -> _program_no `i -> 7 `i 216  ]
"396
[; ;main.c: 396:         if(total_time>=(time-(0.40*time)))
{
"397
[; ;main.c: 397:         {
[e $ ! >= -> F1028 `ui - -> F1027 `ui _wash_time 217  ]
"398
[; ;main.c: 398:             clcd_print("Rinse", (0x80 + 11));
{
"399
[; ;main.c: 399:         }
[e ( _clcd_print (2 , :s 34C -> + -> 128 `i -> 11 `i `uc ]
"400
[; ;main.c: 400:         else
}
[e $U 218  ]
"401
[; ;main.c: 401:         {
[e :U 217 ]
[e $ ! >= -> F1028 `ui - - -> F1027 `ui _wash_time _spin_time 219  ]
"402
[; ;main.c: 402:             clcd_print("Spin ",(0x80 + 11));
{
"403
[; ;main.c: 403:         }
[e ( _clcd_print (2 , :s 35C -> + -> 128 `i -> 11 `i `uc ]
"404
[; ;main.c: 404: 
}
[e $U 220  ]
"405
[; ;main.c: 405:     }
[e :U 219 ]
"406
[; ;main.c: 406:     else if(program_no==9)
{
"407
[; ;main.c: 407:     {
[e ( _clcd_print (2 , :s 36C -> + -> 128 `i -> 11 `i `uc ]
"408
[; ;main.c: 408:         clcd_print("Spin ",(0x80 + 11));
}
[e :U 220 ]
[e :U 218 ]
"409
[; ;main.c: 409:     }
}
[e $U 221  ]
"410
[; ;main.c: 410:     else
[e :U 216 ]
[e $ ! == -> _program_no `i -> 8 `i 222  ]
"411
[; ;main.c: 411:     {
{
"412
[; ;main.c: 412:         clcd_print("Wash",(0x80 + 11));
[e $ ! >= -> F1028 `d - -> F1027 `d * .0.40 -> F1027 `d 223  ]
"413
[; ;main.c: 413:     }
{
"414
[; ;main.c: 414: 
[e ( _clcd_print (2 , :s 37C -> + -> 128 `i -> 11 `i `uc ]
"415
[; ;main.c: 415:     clcd_putch((min/10)+'0', (0xC0 + 6));
}
[e $U 224  ]
"416
[; ;main.c: 416:     clcd_putch((min%10)+'0', (0xC0 + 7));
[e :U 223 ]
"417
[; ;main.c: 417:     clcd_putch(':', (0xC0 + 8));
{
"418
[; ;main.c: 418:     clcd_putch((sec/10)+'0', (0xC0 + 9));
[e ( _clcd_print (2 , :s 38C -> + -> 128 `i -> 11 `i `uc ]
"419
[; ;main.c: 419:     clcd_putch((sec%10)+'0', (0xC0 + 10));
}
[e :U 224 ]
"421
[; ;main.c: 421:     {
}
[e $U 225  ]
"422
[; ;main.c: 422:         RC2=0;
[e :U 222 ]
[e $ ! == -> _program_no `i -> 9 `i 226  ]
"423
[; ;main.c: 423:         TMR2ON=0;
{
"424
[; ;main.c: 424:         RC1=1;
[e ( _clcd_print (2 , :s 39C -> + -> 128 `i -> 11 `i `uc ]
"425
[; ;main.c: 425:         clear_screen();
}
[e $U 227  ]
"426
[; ;main.c: 426:         clcd_print("Prog.Completed", (0x80 + 0));
[e :U 226 ]
"427
[; ;main.c: 427:         clcd_print("Remove Clothes", (0xC0 + 0));
{
"428
[; ;main.c: 428:         _delay((unsigned long)((2000)*(20000000/4000.0)));
[e ( _clcd_print (2 , :s 40C -> + -> 128 `i -> 11 `i `uc ]
"429
[; ;main.c: 429:         RC1 = 0;
}
[e :U 227 ]
[e :U 225 ]
[e :U 221 ]
"431
[; ;main.c: 431:         reset_mode=0x11;
[e ( _clcd_putch (2 , -> + -> / -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 6 `i `uc ]
"432
[; ;main.c: 432:         clear_screen();
[e ( _clcd_putch (2 , -> + -> % -> _min `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 7 `i `uc ]
"433
[; ;main.c: 433:     }
[e ( _clcd_putch (2 , -> -> 58 `ui `uc -> + -> 192 `i -> 8 `i `uc ]
"434
[; ;main.c: 434: 
[e ( _clcd_putch (2 , -> + -> / -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 9 `i `uc ]
"435
[; ;main.c: 435: }
[e ( _clcd_putch (2 , -> + -> % -> _sec `i -> 10 `i `ui -> 48 `ui `uc -> + -> 192 `i -> 10 `i `uc ]
"436
[; ;main.c: 436: 
[e $ ! && == -> _sec `i -> 0 `i == -> _min `i -> 0 `i 228  ]
"437
[; ;main.c: 437: void door_status_check()
{
"438
[; ;main.c: 438: {
[e = _RC2 -> -> 0 `i `b ]
"439
[; ;main.c: 439:     if(RB0==0)
[e = _TMR2ON -> -> 0 `i `b ]
"440
[; ;main.c: 440:     {
[e = _RC1 -> -> 1 `i `b ]
"441
[; ;main.c: 441:         RC2=0;
[e ( _clear_screen ..  ]
"442
[; ;main.c: 442:         TMR2ON=0;
[e ( _clcd_print (2 , :s 41C -> + -> 128 `i -> 0 `i `uc ]
"443
[; ;main.c: 443:         RC1=1;
[e ( _clcd_print (2 , :s 42C -> + -> 192 `i -> 0 `i `uc ]
"444
[; ;main.c: 444:         clear_screen();
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"445
[; ;main.c: 445:         clcd_print("Door : OPEN",(0x80 + 0));
[e = _RC1 -> -> 0 `i `b ]
"446
[; ;main.c: 446:         clcd_print("Please Close",(0x90 + 0));
[e = _operation_mode -> -> 1 `i `uc ]
"447
[; ;main.c: 447:         while(RB0 == 0);
[e = _reset_mode -> -> 17 `i `uc ]
"448
[; ;main.c: 448:         clear_screen();
[e ( _clear_screen ..  ]
"449
[; ;main.c: 449:         clcd_print("Function - ", (0x80 + 0));
}
[e :U 228 ]
"451
[; ;main.c: 451:         clcd_print("5-Start  6-Pause", (0xD0 + 0));
[e :UE 213 ]
}
"453
[; ;main.c: 453:         RC2=1;
[v _door_status_check `(v ~T0 @X0 1 ef ]
"454
[; ;main.c: 454: 
{
[e :U _door_status_check ]
[f ]
"455
[; ;main.c: 455:         TMR2ON=1;
[e $ ! == -> _RB0 `i -> 0 `i 230  ]
"456
[; ;main.c: 456:         RC1=0;
{
"457
[; ;main.c: 457: 
[e = _RC2 -> -> 0 `i `b ]
"458
[; ;main.c: 458:     }
[e = _TMR2ON -> -> 0 `i `b ]
"459
[; ;main.c: 459: 
[e = _RC1 -> -> 1 `i `b ]
"460
[; ;main.c: 460: }
[e ( _clear_screen ..  ]
"461
[e ( _clcd_print (2 , :s 43C -> + -> 128 `i -> 0 `i `uc ]
"462
[e ( _clcd_print (2 , :s 44C -> + -> 144 `i -> 0 `i `uc ]
"463
[e $U 231  ]
[e :U 232 ]
[e :U 231 ]
[e $ == -> _RB0 `i -> 0 `i 232  ]
[e :U 233 ]
"464
[e ( _clear_screen ..  ]
"465
[e ( _clcd_print (2 , :s 45C -> + -> 128 `i -> 0 `i `uc ]
"466
[e ( _clcd_print (2 , :s 46C -> + -> 192 `i -> 0 `i `uc ]
"467
[e ( _clcd_print (2 , :s 47C -> + -> 208 `i -> 0 `i `uc ]
"469
[e = _RC2 -> -> 1 `i `b ]
"471
[e = _TMR2ON -> -> 1 `i `b ]
"472
[e = _RC1 -> -> 0 `i `b ]
"474
}
[e :U 230 ]
"476
[e :UE 229 ]
}
[a 2C 72 101 97 118 121 0 ]
[a 9C 82 105 110 115 101 43 68 114 121 0 ]
[a 10C 68 114 121 32 111 110 108 121 0 ]
[a 11C 87 97 115 104 32 111 110 108 121 0 ]
[a 1C 68 97 105 108 121 0 ]
[a 17C 77 97 120 0 ]
[a 14C 76 111 119 0 ]
[a 8C 66 101 100 32 115 104 101 101 116 115 0 ]
[a 6C 69 99 111 32 99 111 116 116 111 110 115 0 ]
[a 7C 87 111 111 108 101 110 115 0 ]
[a 26C 87 97 115 104 105 110 103 32 80 114 111 103 114 97 109 115 0 ]
[a 4C 87 104 105 116 101 115 0 ]
[a 3C 68 101 108 105 99 97 116 101 115 0 ]
[a 42C 82 101 109 111 118 101 32 67 108 111 116 104 101 115 0 ]
[a 13C 65 117 116 111 0 ]
[a 18C 80 114 101 115 115 32 107 101 121 53 32 116 111 0 ]
[a 15C 77 101 100 105 117 109 0 ]
[a 5C 83 116 97 105 110 32 119 97 115 104 0 ]
[a 34C 87 97 115 104 0 ]
[a 40C 87 97 115 104 0 ]
[a 16C 72 105 103 104 0 ]
[a 21C 80 114 101 115 115 32 83 119 105 116 99 104 0 ]
[a 33C 53 45 83 116 97 114 116 32 32 54 45 80 97 117 115 101 0 ]
[a 47C 53 45 83 116 97 114 116 32 32 54 45 80 97 117 115 101 0 ]
[a 44C 80 108 101 97 115 101 32 67 108 111 115 101 0 ]
[a 35C 82 105 110 115 101 0 ]
[a 37C 82 105 110 115 101 0 ]
[a 12C 65 113 117 97 32 115 116 111 114 101 0 ]
[a 20C 87 97 115 104 105 110 103 32 77 97 99 104 105 110 101 0 ]
[a 25C 87 97 115 104 105 110 103 32 77 97 99 104 105 110 101 0 ]
[a 41C 80 114 111 103 46 67 111 109 112 108 101 116 101 100 0 ]
[a 22C 83 87 53 58 32 83 84 65 82 84 0 ]
[a 23C 83 87 54 58 32 83 84 79 80 0 ]
[a 19C 80 111 119 101 114 32 79 78 0 ]
[a 24C 80 111 119 101 114 105 110 103 32 79 78 0 ]
[a 43C 68 111 111 114 32 58 32 79 80 69 78 0 ]
[a 27C 87 97 116 101 114 32 76 101 118 101 108 58 0 ]
[a 28C 80 82 79 71 58 0 ]
[a 29C 84 73 77 69 58 0 ]
[a 30C 40 77 77 58 83 83 41 0 ]
[a 36C 83 112 105 110 32 0 ]
[a 38C 83 112 105 110 32 0 ]
[a 39C 83 112 105 110 32 0 ]
[a 32C 84 105 109 101 58 32 0 ]
[a 46C 84 105 109 101 58 32 0 ]
[a 31C 70 117 110 99 116 105 111 110 32 45 32 0 ]
[a 45C 70 117 110 99 116 105 111 110 32 45 32 0 ]
